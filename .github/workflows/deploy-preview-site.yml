name: Deploy preview site

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    env:
      DOCKER_BUILDKIT: 1
      TZ: America/Vancouver
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.CHIS_WEBSITE_SSH_DEPLOY_KEY }}
          submodules: recursive

      - name: Run "docker compose up -d" to start NGINX and PHP (detached mode)
        run: docker compose up -d

      - name: Install HTTrack
        run: |
          sudo eatmydata apt-get update
          sudo eatmydata apt-get -y install httrack

      - name: Generate phpinfo for the static site
        run: echo '<?php phpinfo() ?>' > data/phpinfo.php

      - name: Mirror website to get static pages
        run: httrack http://localhost:8080/{index{,-en,-fr},phpinfo}.php -%k -%v2 -%F "" -A0 -I0 -s0

      - name: Copy static site and fix absolute links to *.php
        run: |
          cp -a localhost_8080 public
          cd public
          sed -i 's#"/\([^"]\+\)\.php#"\1.html#g' *.html
          sed -i 's#"/\([^"]\+\)\.php#"../\1.html#g' */*.html

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
